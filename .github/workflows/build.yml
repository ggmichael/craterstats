name: Build binaries

on:
  push:
    tags:
      - 'v*'  # on any tag push
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest] # macos-latest, ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}  # key based on requirements.txt
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install pyinstaller
        run: |
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller craterstats.spec

      - name: Zip binary
        run: |          
          if [ "${{ github.event_name }}" == "push" ]; then
            # Extract version from the tag (e.g., 'v1.0.0' -> '1.0.0')
            VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')
            MESSAGE=$"Release build: this version should be stable for general use."
          else
            # workflow_dispatch      
            VERSION=$(sed -n 's/^__version__ = "\([^"]*\)"/\1-dev/p' < src/craterstats/__init__.py)          
            # Create temporary tag for manual builds
            git tag "v${VERSION}"
            git push origin "v${VERSION}" 
            MESSAGE=$"Development build: this version may contain bugs or incomplete features."
          fi
          
          echo "VERSION=v${VERSION}\nMESSAGE=$MESSAGE" >> $GITHUB_ENV
          
          if [ "${{ runner.os }}" == "Windows" ]; then
            ZIP_NAME="craterstats-$VERSION-win.zip"
            powershell -Command "Compress-Archive -Path dist\\craterstats -DestinationPath dist\\$ZIP_NAME"
          else # Linux/macOS
            if [ "${{ runner.os }}" == "Linux" ]; then
              ZIP_NAME="craterstats-$VERSION-linux-UNTESTED.zip"
            else
              ZIP_NAME="craterstats-$VERSION-macOS-UNTESTED.zip"
            fi
            cd dist
            zip -r $ZIP_NAME craterstats
            cd ..
          fi
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        shell: bash  # also on Windows

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          body: ${{ env.MESSAGE }}
          files: |
            dist/${{ env.ZIP_NAME }}


